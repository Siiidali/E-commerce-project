// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  email           String   @unique
  name            String?
  password        String
  role            Role     @default(USER)
  isEmailVerified Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  Token           Token[]
}

model Token {
  id          Int       @id @default(autoincrement())
  token       String
  type        TokenType
  expires     DateTime
  blacklisted Boolean
  createdAt   DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
}

enum Role {
  USER
  ADMIN
}

enum TokenType {
  ACCESS
  REFRESH
  RESET_PASSWORD
  VERIFY_EMAIL
}

model Product {
  id               Int               @id @default(autoincrement())
  title            String
  price            Float
  description      String
  image            String
  categories       String[]
  quantity         Int
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  ProductsQuantity ProductQuantity[]
}

model Customer {
  id        Int      @id @default(autoincrement())
  name      String
  email     String?
  phone     String
  wilaya    String
  city      String
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Order {
  id         Int               @id @default(autoincrement())
  customer   Customer          @relation(fields: [customerId], references: [id])
  customerId Int
  products   ProductQuantity[]
  total      Float
  status     OrderStatus
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
}

model ProductQuantity {
  id        Int      @id @default(autoincrement())
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  productId Int
  Order     Order?   @relation(fields: [orderId], references: [id])
  orderId   Int?
}

enum OrderStatus {
  PENDING
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELED
}
